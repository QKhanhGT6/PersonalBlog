@model OldBLOG.Models.PostViewModels.PostViewModel
@{
	Layout = "_HomeLayout";
	ViewData["HeaderImage"] = $"../../UserFiles/Posts/{Model.Post.Id}/HeaderImage.jpg";
	ViewData["HeaderTitle"] = Model.Post.Title;
	ViewData["AuthorName"] = $"{Model.Post.Creator.FirstName} {Model.Post.Creator.LastName}";
	ViewData["PostDate"] = Model.Post.UpdatedOn.ToString("MMMM d, yyyy");
	ViewData["AuthorId"] = Model.Post.Creator.Id;
}


<article>
	<div class="container">
		<div class="col-lg-8 col-md-10 mx-auto">
			@Html.Raw(Model.Post.Content)
		</div>
	</div>
	<div class="row mt-5">
		<div class="col-lg-8 col-md-10 mx-auto">
			<h3 class="mb-5" style="color: #030ffc; margin-top: 25px">@Model.Post.Comments.Count() Comment(s)</h3>
			<!--only display if there is a comment-->
			<ul class="comment-list comment-top" list="@Model.Post.Comments" count="0">
				@foreach (var comment in Model.Post.Comments.Where(comment => comment.Parent is null))
				{
					<li class="comment" style="margin-top: 30px;">
						<div class="comment-body">
							<h4 class="commenter-name">@comment.Author.FirstName @comment.Author.LastName</h4>
							<div class="comment-date" style="font-size: smaller; color: grey;">@comment.CreatedOn.ToString("MMMM d, yyyy hh:mm tt")</div>
							<p class="comment-message" style="margin-top: 10px; margin-bottom: 5px">@comment.Content</p>
						</div>
					</li>
					<hr />
				}
			</ul>

			@if (User.Identity.IsAuthenticated)
			{
				<div>
					<form asp-controller="Post" asp-action="Comment">
						<input asp-for="Post.Id" readonly hidden />
						<div class="form-group">
							<label for="comment">Comment</label>
							<textarea asp-for="Comment.Content" class="form-control" rows="3" required></textarea>
							<button type="submit" class="btn btn-outline-primary post-btn" style="margin-bottom: 15px">Post</button>
						</div>
					</form>
				</div>
			}
			else
			{
				<a class="reply-btn btn" asp-area="Identity" asp-page="/Account/Login" asp-route-ReturnUrl="~/Post/@Model.Post.Id">Login to comment on this post</a>
			}
		</div>
	</div>
</article>


@section Scripts{
	<script>
		$('[data-toggle="collapse"]').on('click', function () {
			var $this = $(this),
				$parent = typeof $this.data('parent') !== 'undefined' ? $($this.data('parent')) : undefined;
			if ($parent == undefined) { /* Just toggle my */
				$this.find('.fa').toggleClass('fa-plus fa-minus'); 
				return true;
			}

			/* Open element will be close if parent !== undefined */
			var currentIcon = $this.find('.fa'); 
			currentIcon.toggleClass('fa-plus fa-minus'); 
			$parent.find('.fa').not(currentIcon).removeClass('fa-minus').addClass('fa-plus'); 
		});

	</script>
}